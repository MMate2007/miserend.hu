<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
   integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
   crossorigin=""/>
        <!-- Make sure you put this AFTER Leaflet's CSS -->
 <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
   integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
   crossorigin=""></script>

<div id="mapid" ></div>
   
<script>
    var mymap = L.map('mapid');  
        
    var logo = L.control({position: 'bottomright'});
    logo.onAdd = function(map){
        var div = L.DomUtil.create('div', 'myclass');
        div.innerHTML= '<div class="leaflet-bar"><a id="maplink" href="/map/"><i class="fa fa-expand-arrows-alt" title=""></i></a></div>';
        return div;
    }
    logo.addTo(mymap);
        
    //before .setView!
    mymap.on('load', onMapMoved);
    mymap.on('load', loadBoundary);

    mymap.setView(
        {% if center %}
            [{{ center.lat }}, {{ center.lon}} ], {% if center.zoom %} {{ center.zoom }} {% else %} 13 {% endif %} 
        {% elseif location %}
            [{{ location.lat }}, {{ location.lon}} ], {% if location.zoom %} {{ location.zoom }} {% else %} 13 {% endif %} 
        {% else %}
            [47.5, 19.05 ], 13
        {% endif %} 
    );
                        
    //https://leaflet-extras.github.io/leaflet-providers/preview/
    var CartoDB_Voyager = L.tileLayer('https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors &copy; <a href="https://carto.com/attributions">CARTO</a>',
        subdomains: 'abcd',
        maxZoom: 19
    });
    CartoDB_Voyager.addTo(mymap);
    
    /* Marker of current church */
    {% if location %}
        var greenIcon = new L.Icon({
            iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png',
            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });
        var marker = L.marker([{{ location.lat }}, {{ location.lon}}], {icon: greenIcon}).addTo(mymap);
    {% endif %}
    
    /* Feltételes formázásra példa itt: http://jsfiddle.net/hx5pxdt8/ */
    function areaStyle(feature){
	return {
            fillColor: 'blue',
            weight: 2,
            opacity: 1,
            color: 'white',
            dashArray: '3',
            fillOpacity: 0.2
          }
    };
    
    function loadBoundary(e) {
        {% if boundary %}        
            $.getJSON( "/ajax/boundarygeojson?osm={{ boundary }}" , function( data ) {
                    if(data) {
                        var boundaryLayer = L.geoJSON(data, { style: areaStyle
                           /* onEachFeature: onEachFeature */ 
                        });
                        /* polygon.setStyle({fillColor: '#0000FF'}); */
                        var bounds = L.latLngBounds([]);
                        boundaryLayer.addTo(mymap);
                        mymap.fitBounds(boundaryLayer.getBounds());
                    }
                });  
        {% endif %}    
    }
    
    var myLayer = L.geoJSON().addTo(mymap);
    function onMapMoved(e) {
        var box = this.getBounds();                
        var params = box['_southWest']['lat'] + ";" + box['_southWest']['lng']  + ";" + box['_northEast']['lat'] + ";" + box['_northEast']['lng'] ;                        

       var link = "/terkep?map=" + this.getZoom()  + "/" + this.getCenter().lat  + "/" + this.getCenter().lng  {% if church_id %} + "&tid={{ church_id }}"  {% endif %} {% if boundary %} + "&boundary={{ boundary }}"  {% endif %} ;
                     
       
       $( "#maplink" ).attr("href", link);
       if(window.location.pathname == '/terkep') {       
            history.replaceState(null, '', link);
       }

       if( this.getZoom() < 11 ) {
           if(myLayer) {
                   myLayer.remove();
            }
                   return;
      }
       console.log(this.getZoom());

        $.getJSON( "/ajax/churchesinbbox?bbox=" + params , function( data ) {                              
            if(data) {
                myLayer.remove();
                myLayer = L.geoJSON(null, {
                    onEachFeature: onEachFeature
                }).addTo(mymap);

                var items = [];
                $.each( data, function( key, val ) {
                    var current = {% if church_id %} {{ church_id }} {% else %} -1 {% endif %};
                    if( current != val.id) {
                        var geojsonFeature = {
                            "type": "Feature",                                                      
                            "properties": {
                                "name": val.nev,
                                "popupContent": "<a href='/templom/" + val.id.toString() + "'>"  + val.nev + "</a>"
                            },
                            "geometry": {
                                "type": "Point",
                                "coordinates": [ val.lon , val.lat]
                            },
                        };
                        myLayer.addData(geojsonFeature);
                    }
                });
            }
        });   
    }
        
    mymap.on('moveend', onMapMoved);
        
    function onEachFeature(feature, layer) {
        // does this feature have a property named popupContent?
        if (feature.properties && feature.properties.popupContent) {
        layer.bindPopup(feature.properties.popupContent,{
                maxWidth: "auto",
                autoPan: false
              });
        }
    }
</script>   
